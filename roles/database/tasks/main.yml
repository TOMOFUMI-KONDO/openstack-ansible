---
- name: install_database
  ansible.builtin.apt:
    name: mariadb-server

- name: start_database
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true 

- name: install_python_mysql_package
  ansible.builtin.apt:
    name: python3-pymysql

- name: put_config
  ansible.builtin.template:
    src: ./99-openstack.cnf.j2
    dest:  /etc/mysql/mariadb.conf.d/99-openstack.cnf 
    owner: root
    group: root
    mode: '644'
  notify: restart_database

- name: secure_installation
  ansible.builtin.include_tasks:
    file: secure_installation.yml

- name: create_viewer_user
  community.mysql.mysql_user:
    login_user: root
    login_unix_socket: /run/mysqld/mysqld.sock
    name: viewer
    host: "{{ item }}"
    password: "{{ database_viewer_pass }}"
    priv: '*.*:SELECT'
  loop:
    - localhost
    - '%'
  run_once: true

- name: create_openstack_dbs
  community.mysql.mysql_db:
    name: "{{ item }}"
    login_unix_socket: /run/mysqld/mysqld.sock
  loop:
    - keystone
    - glance
    - placement
    - nova_api
    - nova
    - nova_cell0
    - neutron
  run_once: true

- name: create_openstack_db_users
  ansible.builtin.include_tasks:
    file: create_user.yml
  with_items:
    - { user: 'keystone', dbs: ['keystone'], pass: "{{ database_keystone_pass }}" }
    - { user: 'glance', dbs: ['glance'], pass: "{{ database_glance_pass }}" }
    - { user: 'placement', dbs: ['placement'], pass: "{{ database_placement_pass }}" }
    - { user: 'nova', dbs: ['nova_api', 'nova', 'nova_cell0'], pass: "{{ database_nova_pass }}" }
    - { user: 'neutron', dbs: ['neutron'], pass: "{{ database_neutron_pass }}" }
  loop_control:
    loop_var: outer_item
  run_once: true
